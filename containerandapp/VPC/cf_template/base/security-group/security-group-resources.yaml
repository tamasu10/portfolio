AWSTemplateFormatVersion: "2010-09-09"
# Stack Name:  VPC-SecurityGroup-resources
Parameters:
  VpcName:
    Type: String
  VpcId:
    Type: String

  BastionServerSgID:
    Type: String
    Default: "sg-********"
    Description: "SG ID of Source Bastion SG."

  MonitoringServerSgID:
    Type: String
    Default: "sg-********"
    Description: "SG ID of Source Bastion SG."

  VpcCidrBlock:
      Type: String
      Description: Please input an IP range in VPC.
      Default: 10.0.0.0/16
      AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/16"
      ConstraintDescription: ''



  TargetEnvNameSuffix:
    Type: String
    Default: "" #e.g. -tmp

Resources:
#Security Group

#Common
##SSH-Manageable
  SSHManageableSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "SSH Targets Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          SourceSecurityGroupId: !Ref BastionServerSgID
          Description: "from Bastion Server SG"
        - 
          IpProtocol: "icmp"
          FromPort: "-1"
          ToPort: "-1"
          SourceSecurityGroupId: !Ref BastionServerSgID
          #CidrIp: "0.0.0.0/0"
          Description: "ICMP"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-SSH-Manageable-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

##Monitoring-Target(Prometheus)
  MonitoringTargetSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Monitoring Targets Group (Created by CF)"
      SecurityGroupIngress:
        #node_exporter's port number.
        - 
          IpProtocol: "tcp"
          FromPort: "9100"
          ToPort: "9100"
          SourceSecurityGroupId: !Ref MonitoringServerSgID
          SourceSecurityGroupOwnerId: 970380004877 #Everforth-DEVOPS
          Description: "from Monitoring Server SG"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Monitoring-Target-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#Zabbix Server and Target
  ZabbixServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Monitoring Targets Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        #node_exporter's port number.
        - 
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref VpcCidrBlock
          Description: "Zabbix Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "10051"
          ToPort: "10052"
          CidrIp: !Ref VpcCidrBlock
          Description: "Zabbix Server SG"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-ZabbixServer-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

  ZabbixAgentSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Monitoring Targets Group (Created by CF)"
      SecurityGroupIngress:
        #node_exporter's port number.
        - 
          IpProtocol: "tcp"
          FromPort: "32768"
          ToPort: "61000"
          SourceSecurityGroupId: !Ref ZabbixServerSG
          Description: "Zabbix Agent SG"
        - 
          IpProtocol: "tcp"
          FromPort: "10050"
          ToPort: "10050"
          SourceSecurityGroupId: !Ref ZabbixServerSG
          Description: "Zabbix Agent SG"
        - 
          IpProtocol: "tcp"
          FromPort: "7900"
          ToPort: "7900"
          SourceSecurityGroupId: !Ref ZabbixServerSG
          Description: "Zabbix Agent SG"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-ZabbixAgent-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#Engine
  EngineSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref VpcCidrBlock
          Description: "from LB"
        - 
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          SourceSecurityGroupId: !Ref BastionServerSgID
          Description: "from Bastion Server SG"
        - 
          IpProtocol: "icmp"
          FromPort: "-1"
          ToPort: "-1"
          SourceSecurityGroupId: !Ref BastionServerSgID
          #CidrIp: "0.0.0.0/0"
          Description: "ICMP"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Engine-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId
    
  EngineSGIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: EngineSG
    Properties:
      #https://doc.akka.io/docs/akka/current/remoting.html
      Description: "To Use Akka Cluster network."
      FromPort: 2552
      ToPort: 2552
      GroupId: !Ref EngineSG
      IpProtocol: "tcp"
      SourceSecurityGroupId: !Ref EngineSG

#DB(RDS Aurora)
  DatabaseSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        #DBはかなりの数のコンポーネントから接続されているため、下記は初期構築時の値のみ。
        - 
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref BastionServerSgID
          Description: "from Bastion Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref EngineSG
          Description: "from Engine Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref SearchSG
          Description: "from Search Server SG"
        # - 
        #   IpProtocol: "tcp"
        #   FromPort: "3306"
        #   ToPort: "3306"
        #   SourceSecurityGroupId: !Ref JobSchedulerSG
        #   Description: "from JobScheduler Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref ServiceMixSG
          Description: "from ServiceMix Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref LambdaSG
          Description: "from Lambda Function SG"
        - 
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref AggregateSG
          Description: "from Aggregate Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "3306"
          ToPort: "3306"
          SourceSecurityGroupId: !Ref ConsoleSG
          Description: "from Console Server SG"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Database-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#DB(RDS PostGreSQL)
  PostgreSQLDatabaseSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      GroupName: !Sub "${VpcName}${TargetEnvNameSuffix}-Database-postgreSQL-SG"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        #DBはかなりの数のコンポーネントから接続されているため、下記は初期構築時の値のみ。
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref BastionServerSgID
          Description: "from Bastion Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref EngineSG
          Description: "from Engine Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref SearchSG
          Description: "from Search Server SG"
        # - 
        #   IpProtocol: "tcp"
        #   FromPort: "5432"
        #   ToPort: "5432"
        #   SourceSecurityGroupId: !Ref JobSchedulerSG
        #   Description: "from JobScheduler Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref ServiceMixSG
          Description: "from ServiceMix Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref LambdaSG
          Description: "from Lambda Function SG"
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref AggregateSG
          Description: "from Aggregate Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref ConsoleSG
          Description: "from Console Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "5432"
          ToPort: "5432"
          SourceSecurityGroupId: !Ref ContainerSG
          Description: "from Console Server SG"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Database-postgreSQL-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

  ContainerALBSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: !Sub "${VpcName}${TargetEnvNameSuffix}-Container-ALB-SG"
      GroupDescription: "ALB Security Group"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref VpcCidrBlock
          Description: "HTTP"
        # - 
          # IpProtocol: "tcp"
          # FromPort: "443"
          # ToPort: "443"
          # #CidrIp: !Ref VpcCidrBlock
          # CidrIp: "0.0.0.0/0"  #DMZへ配置
          # Description: "HTTPS"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Container-ALB-SG"
      VpcId: !Ref VpcId

  ContainerSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: !Sub "${VpcName}${TargetEnvNameSuffix}-Container-SG"
      GroupDescription: "Container Security Group"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
#サービス用ポートは、ecs-cluster.yamlで個別に許可。共通利用する物をここで定義。
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "8080"
          ToPort: "8080"
          SourceSecurityGroupId: !Ref ContainerALBSG
          Description: "SpringBoot"
        # - 
        #   IpProtocol: "tcp"
        #   FromPort: "443"
        #   ToPort: "443"
        #   SourceSecurityGroupId: !Ref ALBSecurityGroup
        #   Description: "HTTPS"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Container-SG"
      VpcId: !Ref VpcId


#Mail Subsystem(mail-api,malipublisher,ses)
  MailSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref VpcCidrBlock
          Description: "from LB"
        - 
          IpProtocol: "tcp"
          FromPort: "9000"
          ToPort: "9000"
          CidrIp: !Ref VpcCidrBlock
          Description: "proxy in instance."
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Mail-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#SFTP-SG(FileHub)
  SftpSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "21022"
          ToPort: "21022"
          SourceSecurityGroupId: !Ref EngineSG
          Description: "from Engine Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "21022"
          ToPort: "21022"
          SourceSecurityGroupId: !Ref BastionServerSgID
          Description: "from Bastion Server SG"
        - 
          IpProtocol: "tcp"
          FromPort: "21022"
          ToPort: "21022"
          SourceSecurityGroupId: !Ref ServiceMixSG
          Description: "from ServiceMix Server SG"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-SFTP-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#ServiceMix-SG
  ServiceMixSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "8181"
          ToPort: "8181"
          CidrIp: !Ref VpcCidrBlock
          Description: "Karafand ActiveMQ console."
        - 
          IpProtocol: "tcp"
          FromPort: "61616"
          ToPort: "61616"
          CidrIp: !Ref VpcCidrBlock #Engineからのアクセスのみに限定しても良い可能性あり。暫定対応。
          Description: "Service mix access."
        # - 　#Enigne"へ”のリクエストは必要だが、これは不要と のこと。削除。
        #   IpProtocol: "tcp"
        #   FromPort: "80"
        #   ToPort: "80"
        #   CidrIp: "0.0.0.0/0" #調整中
        #   Description: ""
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-ServiceMix-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#現在はACなどの一部PJでは利用されているが、新規にデプロイされることはないため、コメントアウトし。いずれはコメントも削除でOK。
# #JobScheduler-SG
#   JobSchedulerSG:
#     Type: AWS::EC2::SecurityGroup
#     Properties: 
#       #GroupName: Named by CF
#       GroupDescription: "Security Group (Created by CF)"
#       SecurityGroupEgress:
#         - 
#           CidrIp: "0.0.0.0/0"
#           IpProtocol: "-1"
#       SecurityGroupIngress:
#         - 
#           IpProtocol: "tcp"
#           FromPort: "40444"
#           ToPort: "40444"
#           CidrIp: !Ref VpcCidrBlock
#           Description: "JobScheduler console."
#       Tags:
#         - 
#           Key: Name
#           Value: !Sub "${VpcName}${TargetEnvNameSuffix}-JobScheduler-SG"
#         - Key: StackName
#           Value: !Ref AWS::StackName
#       VpcId: !Ref VpcId


#Search-SG
  SearchSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        - 
          IpProtocol: "tcp"
          FromPort: "8085"
          ToPort: "8085"
          SourceSecurityGroupId: !Ref EngineSG
          Description: "from Engine Server SG"
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Search-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#Console-SG
  ConsoleSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      # SecurityGroupIngress:
      #   -  #Beanstalkにて作成するSGでLBからの80番ポートへの接続を許可されている。
      #     IpProtocol: "tcp"
      #     FromPort: "80"
      #     ToPort: "80"
      #     CidrIp: !Ref VpcCidrBlock
      #     Description: ""
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Console-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#Lambda-SG(in VPC)
  LambdaSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      # SecurityGroupIngress:
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Lambda-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#Aggregate
  AggregateSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        -  
          IpProtocol: "tcp"
          FromPort: "8081"
          ToPort: "8081"
          CidrIp: !Ref VpcCidrBlock
          Description: "web console."
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-Aggregate-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

#FrontendApp
  FrontendAppSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        -  
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref VpcCidrBlock
          Description: ""
      SecurityGroupIngress:
        -  
          IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: !Ref VpcCidrBlock
          Description: ""
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-FrontendApp-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId


#WebAPI
  WebApiSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        -  
          IpProtocol: "tcp"
          FromPort: "80"
          ToPort: "80"
          CidrIp: !Ref VpcCidrBlock
          Description: ""
      SecurityGroupIngress:
        -  
          IpProtocol: "tcp"
          FromPort: "443"
          ToPort: "443"
          CidrIp: !Ref VpcCidrBlock
          Description: ""
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-WebAPI-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

  WebApiMemCacheSG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      #GroupName: Named by CF
      GroupDescription: "Security Group (Created by CF)"
      SecurityGroupEgress:
        - 
          CidrIp: "0.0.0.0/0"
          IpProtocol: "-1"
      SecurityGroupIngress:
        -  
          IpProtocol: "tcp"
          FromPort: "11211"
          ToPort: "11211"
          CidrIp: !Ref VpcCidrBlock
          Description: ""
      Tags:
        - 
          Key: Name
          Value: !Sub "${VpcName}${TargetEnvNameSuffix}-WebAPI-MemCached-SG"
        - Key: StackName
          Value: !Ref AWS::StackName
      VpcId: !Ref VpcId

Outputs:
  SSHManageableSGID:
    Value: !Ref SSHManageableSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-SSHManageableSG-ID
  MonitoringTargetSGID:
    Value: !Ref MonitoringTargetSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-MonitoringTargetSG-ID
  EngineSGID:
    Value: !Ref EngineSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-EngineSG-ID

  DatabaseSGID:
    Value: !Ref DatabaseSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-DatabaseSG-ID

  ZabbixServerSGID:
    Value: !Ref ZabbixServerSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-ZabbixServerSG-ID

  ZabbixAgentSGID:
    Value: !Ref ZabbixAgentSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-ZabbixAgentSG-ID
  SftpSGID:
    Value: !Ref SftpSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-SftpSG-ID
  ServiceMixSGID:
    Value: !Ref ServiceMixSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-ServiceMixSG-ID

  # JobSchedulerSGID:
  #   Value: !Ref JobSchedulerSG
  #   Description: "Security Group Id"
  #   Export:
  #     Name: !Sub ${VpcName}${TargetEnvNameSuffix}-JobSchedulerSG-ID

  SearchSGID:
    Value: !Ref SearchSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-SearchSG-ID

  PostgreSQLDatabaseSGID:
    Value: !Ref PostgreSQLDatabaseSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-PostgreSQLDatabaseSG-ID

  ContainerALBSGID:
    Value: !Ref ContainerALBSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-ContainerALBSG-ID

  ContainerSG:
    Value: !Ref ContainerSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-ContainerSG-ID

  ConsoleSGID:
    Value: !Ref ConsoleSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-ConsoleSG-ID


  LambdaSGID:
    Value: !Ref LambdaSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-LambdaSG-ID

  AggregateSGID:
    Value: !Ref AggregateSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-AggregateSG-ID

  FrontendAppSGID:
    Value: !Ref FrontendAppSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-FrontendAppSG-ID

  WebApiSGID:
    Value: !Ref WebApiSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-WebApiSG-ID
  WebApiMemCacheSGID:
    Value: !Ref WebApiMemCacheSG
    Description: "Security Group Id"
    Export:
      Name: !Sub ${VpcName}${TargetEnvNameSuffix}-WebApiMemCacheSG-ID


  AccountID:
    Value: !Ref AWS::AccountId
